# Reach task - hyperparameters are not tuned (but agent should learn regardless)
# TODO: Autotune Reach task hyperparameters for TQC
Reach-Gazebo-v0:
  policy: "MlpPolicy"
  policy_kwargs:
    n_quantiles: 25
    n_critics: 2
    net_arch: [128, 64]
  env_wrapper:
    - drl_grasping.envs.randomizers.ManipulationGazeboEnvRandomizer:
        robot_random_joint_positions: True
        robot_random_joint_positions_std: 0.1
  # normalize: "{'norm_obs': False, 'norm_reward': True}"
  n_timesteps: 50000
  buffer_size: 25000
  learning_starts: 0
  batch_size: 32
  learning_rate: lin_0.0003
  gamma: 0.95
  tau: 0.01
  ent_coef: "auto_0.1"
  target_entropy: "auto"
  top_quantiles_to_drop_per_net: 2
  train_freq: 1
  gradient_steps: 1
  noise_type: "normal"
  noise_std: 0.025
  optimize_memory_usage: True

Reach-ColorImage-Gazebo-v0:
  policy: "CnnPolicy"
  policy_kwargs:
    n_quantiles: 25
    n_critics: 2
    net_arch: [128, 128]
  env_wrapper:
    - drl_grasping.envs.randomizers.ManipulationGazeboEnvRandomizer:
        robot_random_joint_positions: True
        robot_random_joint_positions_std: 0.1
        camera_pose_rollouts_num: 1
        camera_noise_mean: 0
        camera_noise_stddev: 0.001
  # normalize: "{'norm_obs': False, 'norm_reward': True}"
  n_timesteps: 50000
  buffer_size: 25000
  learning_starts: 0
  batch_size: 32
  learning_rate: lin_0.0003
  gamma: 0.95
  tau: 0.01
  ent_coef: "auto_0.1"
  target_entropy: "auto"
  top_quantiles_to_drop_per_net: 2
  train_freq: 1
  gradient_steps: 1
  noise_type: "normal"
  noise_std: 0.025
  optimize_memory_usage: True

Reach-Octree-Gazebo-v0:
  policy: "OctreeCnnPolicy"
  policy_kwargs:
    features_extractor_kwargs:
      depth: 4
      full_depth: 2
      channels_in: 4
      channel_multiplier: 8
      full_depth_conv1d: True
      full_depth_channels: 2
      features_dim: 64
      aux_obs_dim: 0
      fast_conv: True
      batch_normalization: False
      bn_eps: 0.00001
      bn_momentum: 0.01
    n_quantiles: 25
    n_critics: 2
    net_arch: [128, 128]
    separate_networks_for_stacks: False
    share_features_extractor: True
  env_wrapper:
    - drl_grasping.envs.randomizers.ManipulationGazeboEnvRandomizer:
        robot_random_joint_positions: True
        robot_random_joint_positions_std: 0.1
        camera_pose_rollouts_num: 1
        camera_noise_mean: 0
        camera_noise_stddev: 0.001
  # normalize: "{'norm_obs': False, 'norm_reward': True}"
  n_timesteps: 50000
  buffer_size: 25000
  learning_starts: 0
  batch_size: 32
  learning_rate: lin_0.0003
  gamma: 0.95
  tau: 0.01
  ent_coef: "auto_0.1"
  target_entropy: "auto"
  top_quantiles_to_drop_per_net: 2
  train_freq: 1
  gradient_steps: 1
  noise_type: "normal"
  noise_std: 0.025
  optimize_memory_usage: True

Reach-OctreeWithColor-Gazebo-v0:
  policy: "OctreeCnnPolicy"
  policy_kwargs:
    features_extractor_kwargs:
      depth: 4
      full_depth: 2
      channels_in: 7
      channel_multiplier: 8
      full_depth_conv1d: True
      full_depth_channels: 2
      features_dim: 64
      aux_obs_dim: 0
      fast_conv: True
      batch_normalization: False
      bn_eps: 0.00001
      bn_momentum: 0.01
    n_quantiles: 25
    n_critics: 2
    net_arch: [128, 128]
    separate_networks_for_stacks: False
    share_features_extractor: True
  env_wrapper:
    - drl_grasping.envs.randomizers.ManipulationGazeboEnvRandomizer:
        robot_random_joint_positions: True
        robot_random_joint_positions_std: 0.1
        camera_pose_rollouts_num: 1
        camera_noise_mean: 0
        camera_noise_stddev: 0.001
  # normalize: "{'norm_obs': False, 'norm_reward': True}"
  n_timesteps: 50000
  buffer_size: 25000
  learning_starts: 0
  batch_size: 32
  learning_rate: lin_0.0003
  gamma: 0.95
  tau: 0.01
  ent_coef: "auto_0.1"
  target_entropy: "auto"
  top_quantiles_to_drop_per_net: 2
  train_freq: 1
  gradient_steps: 1
  noise_type: "normal"
  noise_std: 0.025
  optimize_memory_usage: True

# Grasp task - hyperparameters are semi-tuned
Grasp-Octree-Gazebo-v0:
  policy: "OctreeCnnPolicy"
  policy_kwargs:
    features_extractor_kwargs:
      depth: 4
      full_depth: 2
      channels_in: 4
      channel_multiplier: 32
      full_depth_conv1d: True
      full_depth_channels: 4
      features_dim: 128
      aux_obs_dim: 10
      fast_conv: True
      batch_normalization: False
      bn_eps: 0.00001
      bn_momentum: 0.01
    n_quantiles: 25
    n_critics: 3
    net_arch: [384, 384]
    separate_networks_for_stacks: True
    share_features_extractor: True
  env_wrapper:
    - drl_grasping.envs.randomizers.ManipulationGazeboEnvRandomizer:
        robot_random_joint_positions: True
        robot_random_joint_positions_std: 0.1
        camera_pose_rollouts_num: 1
        camera_noise_mean: 0
        camera_noise_stddev: 0.001
        ground_model_rollouts_num: 1
        object_random_pose: True
        object_random_use_mesh_models: True
        object_models_rollouts_num: 1
        object_random_model_count: 1
  normalize: "{'norm_obs': False, 'norm_reward': True}"
  n_timesteps: 1000000
  buffer_size: 25000
  learning_starts: 0
  batch_size: 64
  learning_rate: lin_0.0001
  gamma: 0.99
  tau: 0.00005
  ent_coef: "auto_0.1_0.05"
  target_entropy: "auto"
  top_quantiles_to_drop_per_net: 2
  train_freq: 1
  gradient_steps: 2
  noise_type: "normal"
  noise_std: 0.05
  optimize_memory_usage: True

Grasp-OctreeWithColor-Gazebo-v0:
  policy: "OctreeCnnPolicy"
  policy_kwargs:
    features_extractor_kwargs:
      depth: 4
      full_depth: 2
      channels_in: 7
      channel_multiplier: 32
      full_depth_conv1d: True
      full_depth_channels: 4
      features_dim: 128
      aux_obs_dim: 10
      fast_conv: True
      batch_normalization: False
      bn_eps: 0.00001
      bn_momentum: 0.01
    n_quantiles: 25
    n_critics: 3
    net_arch: [384, 384]
    separate_networks_for_stacks: True
    share_features_extractor: True
  env_wrapper:
    - drl_grasping.envs.randomizers.ManipulationGazeboEnvRandomizer:
        robot_random_joint_positions: True
        robot_random_joint_positions_std: 0.1
        camera_pose_rollouts_num: 1
        camera_noise_mean: 0
        camera_noise_stddev: 0.001
        ground_model_rollouts_num: 1
        object_random_pose: True
        object_random_use_mesh_models: True
        object_models_rollouts_num: 1
        object_random_model_count: 1
  normalize: "{'norm_obs': False, 'norm_reward': True}"
  n_timesteps: 1000000
  buffer_size: 25000
  learning_starts: 0
  batch_size: 64
  learning_rate: lin_0.0001
  gamma: 0.99
  tau: 0.00005
  ent_coef: "auto_0.1_0.05"
  target_entropy: "auto"
  top_quantiles_to_drop_per_net: 2
  train_freq: 1
  gradient_steps: 2
  noise_type: "normal"
  noise_std: 0.1
  optimize_memory_usage: True
